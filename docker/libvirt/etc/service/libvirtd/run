#!/bin/sh

# Copyright (C) 2016 Adenops Consultants Informatique Inc.
#
# This file is part of the Moustack project, see http://www.moustack.org for
# more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# XXX: all this user logic is messy, is this (or some part of it) related to
# our dev environment? Is all of this relevant on a server?
# It seems it could also mess up live migration, libvirt and nova user have to
# be the same everywhere, so we should probably solve it during docker build.

# source shell library
. /usr/lib/runit/load

wait_for syslog

mkdir -p /var/run/libvirt/
rm -f /var/run/libvirtd.pid

# ensure nova user matches with nova-compute
# TODO: this is not very safe, there should be better solution
# create custom user for nova at build time in docker?
if ! grep -q '^nova:' /etc/group; then
	groupadd --gid 109 nova
fi
if ! grep -q '^nova:' /etc/passwd; then
	# NOTE: uid should be 105 but it may already been taken by libvirt so
	# we don't enfore it (it seems to work)
	useradd --home-dir /var/lib/nova --no-create-home --shell /bin/false \
		--gid 109 nova
fi

# same thing as nova
# XXX: this is very ugly, need to be fixed
if ! grep -q '^ceilometer:' /etc/group; then
	groupadd --gid 108 ceilometer
fi
if ! grep -q '^ceilometer:' /etc/passwd; then
	useradd --home-dir /bin --no-create-home --shell /bin/false \
		--gid 108 ceilometer
fi

# fix /dev/kvm permissions
kvm_host_group=kvm-host
kvm_user=libvirt-qemu

if ! grep -q "${kvm_host_group}:" /etc/group; then
	groupadd --gid `ls -l /dev/kvm | awk '{ print $4; }'` ${kvm_host_group}
fi

if ! grep -q "${kvm_host_group}:.*${kvm_user}" /etc/group; then
	adduser ${kvm_user} ${kvm_host_group}
fi

exec /usr/sbin/libvirtd --listen
