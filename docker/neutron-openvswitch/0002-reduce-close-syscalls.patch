From 8e240991f77fe1be7b8fd94005659d8c6e2bfaa7 Mon Sep 17 00:00:00 2001
From: Julien Bonjean <julien@bonjean.info>
Date: Sat, 30 Jan 2016 19:35:49 -0500
Subject: [PATCH 2/3] reduce close() syscalls

The eventlet subprocess.Popen is always invoked with close_fds=True
which is problematic because it is not smart enough to try to close only
existing fds and tries every values the system allows.
This issue can be mitigated by reducing the number of open fd allowed
(ulimit nofile).
---
 usr/lib/python2.7/dist-packages/neutron/agent/linux/utils.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/usr/lib/python2.7/dist-packages/neutron/agent/linux/utils.py b/usr/lib/python2.7/dist-packages/neutron/agent/linux/utils.py
index 83e54ef..e00818b 100644
--- a/usr/lib/python2.7/dist-packages/neutron/agent/linux/utils.py
+++ b/usr/lib/python2.7/dist-packages/neutron/agent/linux/utils.py
@@ -83,7 +83,7 @@ def create_process(cmd, run_as_root=False, addl_env=None):
     if run_as_root:
         cmd = shlex.split(config.get_root_helper(cfg.CONF)) + cmd
     LOG.debug("Running command: %s", cmd)
-    obj = utils.subprocess_popen(cmd, shell=False,
+    obj = utils.subprocess_popen(cmd, shell=False, close_fds=False,
                                  stdin=subprocess.PIPE,
                                  stdout=subprocess.PIPE,
                                  stderr=subprocess.PIPE)
--
2.7.0.rc3
