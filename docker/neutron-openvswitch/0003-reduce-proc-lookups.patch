From 85f136c8f5d98f8d10989a0534491a8e008c7176 Mon Sep 17 00:00:00 2001
From: Julien Bonjean <julien@bonjean.info>
Date: Sat, 30 Jan 2016 19:25:47 -0500
Subject: [PATCH 1/3] reduce /proc lookups

The ovs monitor status is checked every second or so by looking for its
pid and check the cmdline. Because it is invoked through the
root_wrapper, the function get_root_helper_child_pid is used to find the
real process (sudo -> rootwrapper -> process), leading to a full lookup
through /proc.
This issue is not major but can have an impact on servers with many
applications running.
---
 .../python2.7/dist-packages/neutron/agent/linux/async_process.py    | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/usr/lib/python2.7/dist-packages/neutron/agent/linux/async_process.py b/usr/lib/python2.7/dist-packages/neutron/agent/linux/async_process.py
index f94cfa6..e24306d 100644
--- a/usr/lib/python2.7/dist-packages/neutron/agent/linux/async_process.py
+++ b/usr/lib/python2.7/dist-packages/neutron/agent/linux/async_process.py
@@ -81,6 +81,7 @@ class AsyncProcess(object):
         self._watchers = []
         self.log_output = log_output
         self.die_on_error = die_on_error
+        self._pid = None

     @property
     def cmd(self):
@@ -94,8 +95,11 @@ class AsyncProcess(object):
         # If using sudo rootwrap as a root_helper, we have to wait until sudo
         # spawns rootwrap and rootwrap spawns the process.

+        if self._pid is None or not utils.get_cmdline_from_pid(self._pid):
+            self._pid = self.pid
+
         return utils.pid_invoked_with_cmdline(
-            self.pid, self.cmd_without_namespace)
+            self._pid, self.cmd_without_namespace)

     def start(self, block=False):
         """Launch a process and monitor it asynchronously.
--
2.7.0.rc3
